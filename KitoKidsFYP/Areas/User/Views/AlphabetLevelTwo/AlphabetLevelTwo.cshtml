@{
    Layout = null;
}




<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Level Two</title>
     <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.0/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js"></script>

    <link rel="stylesheet" href="styles.css">

    <style>


        /* Add some margin to the page and set a default font and colour */

        body {
           
            font-family: "Georgia", serif;
            line-height: 1.8em;
            color: #333;
        }

        /* Give headings their own font */

        h1, h2, h3, h4 {
            font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
        }

        /* Main content area */

        #content {
            margin: 80px 70px;
            text-align: center;
            -moz-user-select: none;
            -webkit-user-select: none;
            user-select: none;
        }

        /* Header/footer boxes */

        .wideBox {
            clear: both;
            text-align: center;
            margin: 70px;
            padding: 10px;
            background: #ebedf2;
            border: 1px solid #333;
        }

            .wideBox h1 {
                font-weight: bold;
                margin: 20px;
                color: #666;
                font-size: 1.5em;
            }

        /* Slots for final card positions */

        #cardSlots {
            margin: 50px auto 0 auto;
            background: #FFCCBC;
        }

        /* The initial pile of unsorted cards */

        #cardPile {
            margin: 0 auto;
            background: #00E5FF;
        }

        #cardSlots, #cardPile {
            width: 1097px;
            height: 150px;
            padding: 30px;
            border: 2px solid #333;
            -moz-border-radius: 10px;
            -webkit-border-radius: 10px;
            border-radius: 50px 50px 50px 50px;
            -moz-box-shadow: 0 0 .3em rgba(0, 0, 0, .8);
            -webkit-box-shadow: 0 0 .3em rgba(0, 0, 0, .8);
            box-shadow: 0 0 .3em rgba(0, 0, 0, .8);
        }

        #cardPile {
            width: 1097px;
            height: 150px;
            padding: 30px;
            border: 2px solid #333;
            -moz-border-radius: 10px;
            -webkit-border-radius: 10px;
            border-radius: 50px 50px 50px 50px;
            -moz-box-shadow: 0 0 .3em rgba(0, 0, 0, .8);
            -webkit-box-shadow: 0 0 .3em rgba(0, 0, 0, .8);
            box-shadow: 0 0 .3em rgba(0, 0, 0, .8);
        }

            /* Individual cards and slots */

            #cardSlots div, #cardPile div {
                float: left;
                width: 18px;
                height: 95px;
                padding: 8px;
                padding-top: 60px;
                padding-bottom: 0;
                border: 2px solid #333;
                -moz-border-radius: 10px;
                -webkit-border-radius: 10px;
                border-radius: 10px;
                margin: 0 0 0 8px;
                background: #fff;
            }

                #cardSlots div:first-child, #cardPile div:first-child {
                    margin-left: 0;
                }

                #cardSlots div.hovered {
                    background: #aaa;
                }

            #cardSlots div {
                border-style: dashed;
            }

            #cardPile div {
                background: #FF9100;
                color: black;
                font-size: 35px;
/*                text-shadow: 0 0 3px #000;
*/          
            
            }

                #cardPile div.ui-draggable-dragging {
                    -moz-box-shadow: 0 0 .5em rgba(0, 0, 0, .8);
                    -webkit-box-shadow: 0 0 .5em rgba(0, 0, 0, .8);
                    box-shadow: 0 0 .5em rgba(0, 0, 0, .8);
                }

        /* Individually coloured cards */

        #card1.correct {
            background: orange;
        }

        #card2.correct {
            background: orange;
        }

        #card3.correct {
            background: orange;
        }

        #card4.correct {
            background: orange;
        }

        #card5.correct {
            background: orange;
        }

        #card6.correct {
            background: orange;
        }

        #card7.correct {
            background: orange;
        }

        #card8.correct {
            background: orange;
        }

        #card9.correct {
            background: orange;
        }

        #card10.correct {
            background: orange;
        }


        /* "You did it!" message */
        #successMessage {
            position: absolute;
            left: 580px;
            top: 250px;
            width: 400px !important;
            height: 140px !important;
            z-index: 100;
            background: #dfd;
            border: 2px solid #333;
            -moz-border-radius: 10px;
            -webkit-border-radius: 10px;
            border-radius: 10px;
            -moz-box-shadow: .3em .3em .5em rgba(0, 0, 0, .8);
            -webkit-box-shadow: .3em .3em .5em rgba(0, 0, 0, .8);
            box-shadow: .3em .3em .5em rgba(0, 0, 0, .8);
            padding: 20px;
        }

    </style>


</head>
<body style="background-color:#E0E0E0; margin: 0 !important;
    padding: 0 !important;">




    <div id="content" style=" margin: 0 !important;
    padding: 0 !important;">
        <div id="cardSlots"> </div>
        <br />
        <div id="cardPile"> </div>


        <div id="successMessage">
            <h2>You did it!</h2>
            <div class="score1">Wrong Answers : <span>0</span></div>
           
             
            <button class="btn btn-primary" onclick="init()">Play Again</button>
        </div>

    </div>

    <script>

        var soundCorrect = new Audio('/Files/rightt.mp3');
        var soundInCorrect = new Audio('/Files/wrong.mp3');
        var playTheGame = new Audio('/Files/improvethealpha.mp3');
        playTheGame.play();
        //const score = document.querySelector('.score span');
        const score1 = document.querySelector('.score1 span');


        
        var correctCards = 0;
        var wornganss=1;
        $(init);

        function init() {

            // Hide the success message
            $('#successMessage').hide();
            $('#successMessage').css({
                left: '580px',
                top: '250px',
                width: 0,
                height: 0
            });

            // Reset the game
            correctCards = 0;
            $('#cardPile').html('');
            $('#cardSlots').html('');

            // Create the pile of shuffled cards
            var numbers = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j' ,'k' ,'m' ,'n','o','p','q','r','s','t','u' , 'v' , 'w' ,'x' ,'y'];


            numbers.sort(function () { return Math.random() - .5 });

            for (var i = 0; i < 24; i++) {
                $('<div>' + numbers[i] + '</div>').data('string', numbers[i]).attr('id', 'card' + numbers[i]).appendTo('#cardPile').draggable({
                    containment: '#content',
                    stack: '#cardPile div',
                    cursor: 'move',
                    revert: true
                });
            }

            // Create the card slots
            var words = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u' , 'v', 'w', 'x', 'y'];
            for (var i = 1; i <= 24; i++) {
                p = ['z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y'];
                $('<div>' + words[i - 1] + '</div>').data('string', p[i]).appendTo('#cardSlots').droppable({
                    accept: '#cardPile div',
                    hoverClass: 'hovered',
                    drop: handleCardDrop
                });
            }

        }

        function handleCardDrop(event, ui) {
            var slotString = $(this).data('string');
            var cardString = ui.draggable.data('string');

            // If the card was dropped to the correct slot,
            // change the card colour, position it directly
            // on top of the slot, and prevent it being dragged
            // again

            if (slotString == cardString) {
                soundCorrect.play();
                ui.draggable.addClass('correct');
                ui.draggable.draggable('disable');
                $(this).droppable('disable');
                ui.draggable.position({ of: $(this), my: 'left top', at: 'left top' });
                ui.draggable.draggable('option', 'revert', false);
                correctCards++;
                console.log(correctCards);
                //score.innerHTML = parseInt(score.innerHTML) + 1;
            }
            else{
                soundInCorrect.play();
                wornganss++;
                console.log(wornganss);
                score1.innerHTML = parseInt(score1.innerHTML) + 1;
            }


            // If all the cards have been placed correctly then display a message
            // and reset the cards for another go

            if (correctCards == 24) {
                $('#successMessage').show();
                $('#successMessage').animate({
                    left: '380px',
                    top: '200px',
                    width: '400px',
                    height: '100px',
                    opacity: 1
                });
            }

        }
    </script>
</body>
</html>